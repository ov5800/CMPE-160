library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity hw13_p4 is

Port ( 
	signal clear, S1, S0, clk : in STD_LOGIC;
	signal sh_left, sh_right, A, B, C, D : in STD_LOGIC;
	signal QA, QB, QC, QD : out STD_LOGIC);

end hw13_p4;

architecture behavioral of hw13_p4 is
	-- This example uses modern register numbering 3 downto 0
	-- The following mapping is used:
	-- QA = Qreg(3), QB = Qreg(2), QC = Qreg(1) and QD = Qreg(0)
	signal Qreg : STD_LOGIC_VECTOR ( 3 downto 0 );
begin
	ic74194_model : process (clk) is begin
		-- falling edge has clk='0'
		if clk'event and clk='0' then
			if clear = '0' then
				Qreg <= ( others => '0' );
			else
				case std_logic_vector'(S1, S0) is
					when "00" => Qreg <= Qreg(3) & Qreg(2) & Qreg(1) & Qreg(0); -- hold
					when "01" => Qreg <= sh_right & Qreg(3) & Qreg(2) & Qreg(1);
					when "10" => Qreg <= Qreg(2) & Qreg(1) & Qreg(0) & sh_left;
					when others => Qreg <= A & B & C & D; -- "11" load
				end case;
			end if;
		end if;
	end process;
(QA, QB, QC, QD) <= Qreg;
end behavioral;